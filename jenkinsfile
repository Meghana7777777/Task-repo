pipeline {
    agent any

    environment {
        EC2_IP = '3.110.168.92'
        SSH_USER = 'ubuntu'
        SSH_KEY = credentials('Practice-key')  // Ensure 'Practice-key' is the ID of the SSH key credential stored in Jenkins
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning repository...'
                git branch: 'deploy', url: 'https://github.com/Meghana7777777/Task-repo.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies...'
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                // Example: If you have a React app, you might run 'npm run build' here
                echo 'Building application...'
                // sh 'npm run build'
            }
        }

        stage('Create Dist Folder on EC2') {
            steps {
                echo 'Creating dist folder on EC2...'
                sh """
                ssh -o StrictHostKeyChecking=no -i ${SSH_KEY} ${SSH_USER}@${EC2_IP} << EOF
                mkdir -p /home/${SSH_USER}/dist
                exit
                EOF
                """
            }
        }

        stage('Transfer Files to EC2') {
            steps {
                echo 'Transferring files to EC2...'
                sh """
                scp -o StrictHostKeyChecking=no -i ${SSH_KEY} -r * ${SSH_USER}@${EC2_IP}:/home/${SSH_USER}/dist
                """
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying application on EC2...'
                sh """
                ssh -o StrictHostKeyChecking=no -i ${SSH_KEY} ${SSH_USER}@${EC2_IP} << EOF
                cd /home/${SSH_USER}/dist
                npm install
                pm2 start npm --name "node_sql" -- start
                exit
                EOF
                """
            }
        }
    }

    post {
        success {
            echo 'Deployment succeeded!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
